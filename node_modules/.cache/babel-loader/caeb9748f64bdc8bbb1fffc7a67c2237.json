{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { hexToUtf8, utf8ToBytes } from 'web3-utils';\nimport { decodeBytes, encodeBytes } from './bytes.js';\nexport function encodeString(_param, input) {\n  if (typeof input !== 'string') {\n    throw new AbiError('invalid input, should be string', {\n      input\n    });\n  }\n\n  const bytes = utf8ToBytes(input);\n  return encodeBytes({\n    type: 'bytes',\n    name: ''\n  }, bytes);\n}\nexport function decodeString(_param, bytes) {\n  const r = decodeBytes({\n    type: 'bytes',\n    name: ''\n  }, bytes);\n  return {\n    result: hexToUtf8(r.result),\n    encoded: r.encoded,\n    consumed: r.consumed\n  };\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAASA,QAAT,QAAyB,aAAzB;AAEA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,YAAvC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,YAAzC;AAEA,OAAM,SAAUC,YAAV,CAAuBC,MAAvB,EAA6CC,KAA7C,EAA2D;EAChE,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC9B,MAAM,IAAIP,QAAJ,CAAa,iCAAb,EAAgD;MAAEO;IAAF,CAAhD,CAAN;EACA;;EACD,MAAMC,KAAK,GAAGN,WAAW,CAACK,KAAD,CAAzB;EACA,OAAOH,WAAW,CAAC;IAAEK,IAAI,EAAE,OAAR;IAAiBC,IAAI,EAAE;EAAvB,CAAD,EAA8BF,KAA9B,CAAlB;AACA;AAED,OAAM,SAAUG,YAAV,CAAuBL,MAAvB,EAA6CE,KAA7C,EAA8D;EACnE,MAAMI,CAAC,GAAGT,WAAW,CAAC;IAAEM,IAAI,EAAE,OAAR;IAAiBC,IAAI,EAAE;EAAvB,CAAD,EAA8BF,KAA9B,CAArB;EACA,OAAO;IACNK,MAAM,EAAEZ,SAAS,CAACW,CAAC,CAACC,MAAH,CADX;IAENC,OAAO,EAAEF,CAAC,CAACE,OAFL;IAGNC,QAAQ,EAAEH,CAAC,CAACG;EAHN,CAAP;AAKA","names":["AbiError","hexToUtf8","utf8ToBytes","decodeBytes","encodeBytes","encodeString","_param","input","bytes","type","name","decodeString","r","result","encoded","consumed"],"sources":["C:\\Users\\Asus\\Desktop\\todolist-blockchain\\node_modules\\web3-eth-abi\\src\\coders\\base\\string.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { hexToUtf8, utf8ToBytes } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\n\nexport function encodeString(_param: AbiParameter, input: unknown): EncoderResult {\n\tif (typeof input !== 'string') {\n\t\tthrow new AbiError('invalid input, should be string', { input });\n\t}\n\tconst bytes = utf8ToBytes(input);\n\treturn encodeBytes({ type: 'bytes', name: '' }, bytes);\n}\n\nexport function decodeString(_param: AbiParameter, bytes: Uint8Array): DecoderResult<string> {\n\tconst r = decodeBytes({ type: 'bytes', name: '' }, bytes);\n\treturn {\n\t\tresult: hexToUtf8(r.result),\n\t\tencoded: r.encoded,\n\t\tconsumed: r.consumed,\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}