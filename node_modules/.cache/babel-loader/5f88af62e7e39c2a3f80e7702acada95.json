{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { decodeAddress, encodeAddress } from './address.js';\nimport { decodeBool, encodeBoolean } from './bool.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\nimport { decodeNumber, encodeNumber } from './number.js';\nimport { decodeString, encodeString } from './string.js'; // eslint-disable-next-line import/no-cycle\n\nimport { decodeTuple, encodeTuple } from './tuple.js'; // eslint-disable-next-line import/no-cycle\n\nimport { decodeArray, encodeArray } from './array.js';\nexport { encodeAddress, decodeAddress } from './address.js';\nexport { encodeBoolean, decodeBool } from './bool.js';\nexport { encodeBytes, decodeBytes } from './bytes.js';\nexport { encodeNumber, decodeNumber } from './number.js';\nexport { encodeString, decodeString } from './string.js'; // eslint-disable-next-line import/no-cycle\n\nexport { encodeTuple, decodeTuple } from './tuple.js'; // eslint-disable-next-line import/no-cycle\n\nexport { encodeArray, decodeArray } from './array.js';\nexport function encodeParamFromAbiParameter(param, value) {\n  if (param.type === 'string') {\n    return encodeString(param, value);\n  }\n\n  if (param.type === 'bool') {\n    return encodeBoolean(param, value);\n  }\n\n  if (param.type === 'address') {\n    return encodeAddress(param, value);\n  }\n\n  if (param.type === 'tuple') {\n    return encodeTuple(param, value);\n  }\n\n  if (param.type.endsWith(']')) {\n    return encodeArray(param, value);\n  }\n\n  if (param.type.startsWith('bytes')) {\n    return encodeBytes(param, value);\n  }\n\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    return encodeNumber(param, value);\n  }\n\n  throw new Error('Unsupported');\n}\nexport function decodeParamFromAbiParameter(param, bytes) {\n  if (param.type === 'string') {\n    return decodeString(param, bytes);\n  }\n\n  if (param.type === 'bool') {\n    return decodeBool(param, bytes);\n  }\n\n  if (param.type === 'address') {\n    return decodeAddress(param, bytes);\n  }\n\n  if (param.type === 'tuple') {\n    return decodeTuple(param, bytes);\n  }\n\n  if (param.type.endsWith(']')) {\n    return decodeArray(param, bytes);\n  }\n\n  if (param.type.startsWith('bytes')) {\n    return decodeBytes(param, bytes);\n  }\n\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    return decodeNumber(param, bytes);\n  }\n\n  throw new Error('Unsupported');\n}","map":{"version":3,"mappings":"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","names":["decodeAddress","encodeAddress","decodeBool","encodeBoolean","decodeBytes","encodeBytes","decodeNumber","encodeNumber","decodeString","encodeString","decodeTuple","encodeTuple","decodeArray","encodeArray","encodeParamFromAbiParameter","param","value","type","endsWith","startsWith","Error","decodeParamFromAbiParameter","bytes"],"sources":["C:\\Users\\Asus\\Desktop\\todolist-blockchain\\node_modules\\web3-eth-abi\\src\\coders\\base\\index.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiParameter } from 'web3-types';\nimport { EncoderResult, DecoderResult } from '../types.js';\nimport { decodeAddress, encodeAddress } from './address.js';\nimport { decodeBool, encodeBoolean } from './bool.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\nimport { decodeNumber, encodeNumber } from './number.js';\nimport { decodeString, encodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeTuple, encodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeArray, encodeArray } from './array.js';\n\nexport { encodeAddress, decodeAddress } from './address.js';\nexport { encodeBoolean, decodeBool } from './bool.js';\nexport { encodeBytes, decodeBytes } from './bytes.js';\nexport { encodeNumber, decodeNumber } from './number.js';\nexport { encodeString, decodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeTuple, decodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeArray, decodeArray } from './array.js';\n\nexport function encodeParamFromAbiParameter(param: AbiParameter, value: unknown): EncoderResult {\n\tif (param.type === 'string') {\n\t\treturn encodeString(param, value);\n\t}\n\tif (param.type === 'bool') {\n\t\treturn encodeBoolean(param, value);\n\t}\n\tif (param.type === 'address') {\n\t\treturn encodeAddress(param, value);\n\t}\n\tif (param.type === 'tuple') {\n\t\treturn encodeTuple(param, value);\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn encodeArray(param, value);\n\t}\n\tif (param.type.startsWith('bytes')) {\n\t\treturn encodeBytes(param, value);\n\t}\n\tif (param.type.startsWith('uint') || param.type.startsWith('int')) {\n\t\treturn encodeNumber(param, value);\n\t}\n\tthrow new Error('Unsupported');\n}\n\nexport function decodeParamFromAbiParameter(param: AbiParameter, bytes: Uint8Array): DecoderResult {\n\tif (param.type === 'string') {\n\t\treturn decodeString(param, bytes);\n\t}\n\tif (param.type === 'bool') {\n\t\treturn decodeBool(param, bytes);\n\t}\n\tif (param.type === 'address') {\n\t\treturn decodeAddress(param, bytes);\n\t}\n\tif (param.type === 'tuple') {\n\t\treturn decodeTuple(param, bytes);\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn decodeArray(param, bytes);\n\t}\n\tif (param.type.startsWith('bytes')) {\n\t\treturn decodeBytes(param, bytes);\n\t}\n\tif (param.type.startsWith('uint') || param.type.startsWith('int')) {\n\t\treturn decodeNumber(param, bytes);\n\t}\n\tthrow new Error('Unsupported');\n}\n"]},"metadata":{},"sourceType":"module"}