{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\todolist-blockchain\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Text, Title, Modal, TextInput, Group, Card, ActionIcon } from '@mantine/core';\nimport { useState, useRef, useEffect } from 'react';\nimport { MoonStars, Sun, Trash } from 'tabler-icons-react';\nimport { MantineProvider, ColorSchemeProvider } from '@mantine/core';\nimport { useColorScheme } from '@mantine/hooks';\nimport { useHotkeys, useLocalStorage } from '@mantine/hooks';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [opened, setOpened] = useState(false);\n  const preferredColorScheme = useColorScheme();\n  const [colorScheme, setColorScheme] = useLocalStorage({\n    key: 'mantine-color-scheme',\n    defaultValue: 'light',\n    getInitialValueInEffect: true\n  });\n\n  const toggleColorScheme = value => setColorScheme(value || (colorScheme === 'dark' ? 'light' : 'dark'));\n\n  useHotkeys([['mod+J', () => toggleColorScheme()]]);\n  const taskTitle = useRef('');\n  const taskSummary = useRef('');\n  useEffect(() => {\n    async function connectToMetamask() {\n      if (window.ethereum) {\n        try {\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          window.web3 = new Web3(window.ethereum);\n        } catch (error) {\n          console.error('Error connecting to Metamask:', error);\n        }\n      } else {\n        console.error('Metamask not detected');\n      }\n    }\n\n    connectToMetamask();\n  }, []);\n\n  async function createTask() {\n    const contractAddress = '0xcD6a42782d230D7c13A74ddec5dD140e55499Df9'; // Replace with your smart contract address\n\n    const contractABI = [{\n      \"anonymous\": false,\n      \"inputs\": [{\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"title\",\n        \"type\": \"string\"\n      }, {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"summary\",\n        \"type\": \"string\"\n      }],\n      \"name\": \"TaskCreated\",\n      \"type\": \"event\"\n    }, {\n      \"anonymous\": false,\n      \"inputs\": [{\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }],\n      \"name\": \"TaskDeleted\",\n      \"type\": \"event\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"_title\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"_summary\",\n        \"type\": \"string\"\n      }],\n      \"name\": \"createTask\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }],\n      \"name\": \"deleteTask\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    }, {\n      \"inputs\": [],\n      \"name\": \"getTaskCount\",\n      \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }],\n      \"name\": \"getTaskDetails\",\n      \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"title\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"summary\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"bool\",\n        \"name\": \"completed\",\n        \"type\": \"bool\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }],\n      \"name\": \"tasks\",\n      \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"title\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"summary\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"bool\",\n        \"name\": \"completed\",\n        \"type\": \"bool\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }]; // Replace with your smart contract ABI\n\n    const contract = new window.web3.eth.Contract(contractABI, contractAddress);\n    const accounts = await window.web3.eth.getAccounts();\n    const newTask = {\n      title: taskTitle.current.value,\n      summary: taskSummary.current.value\n    };\n\n    try {\n      await contract.methods.createTask(newTask.title, newTask.summary).send({\n        from: accounts[0]\n      });\n      setTasks([...tasks, newTask]);\n      saveTasks([...tasks, newTask]);\n    } catch (error) {\n      console.error('Error executing transaction:', error);\n    }\n  }\n\n  async function deleteTask(index) {\n    const contractAddress = '0xcD6a42782d230D7c13A74ddec5dD140e55499Df9'; // Replace with your smart contract address\n\n    const contractABI = [{\n      \"anonymous\": false,\n      \"inputs\": [{\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"title\",\n        \"type\": \"string\"\n      }, {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"summary\",\n        \"type\": \"string\"\n      }],\n      \"name\": \"TaskCreated\",\n      \"type\": \"event\"\n    }, {\n      \"anonymous\": false,\n      \"inputs\": [{\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }],\n      \"name\": \"TaskDeleted\",\n      \"type\": \"event\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"_title\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"_summary\",\n        \"type\": \"string\"\n      }],\n      \"name\": \"createTask\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }],\n      \"name\": \"deleteTask\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    }, {\n      \"inputs\": [],\n      \"name\": \"getTaskCount\",\n      \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }],\n      \"name\": \"getTaskDetails\",\n      \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"title\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"summary\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"bool\",\n        \"name\": \"completed\",\n        \"type\": \"bool\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }],\n      \"name\": \"tasks\",\n      \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"title\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"summary\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"bool\",\n        \"name\": \"completed\",\n        \"type\": \"bool\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }]; // Replace with your smart contract ABI\n\n    const contract = new window.web3.eth.Contract(contractABI, contractAddress);\n    const accounts = await window.web3.eth.getAccounts();\n\n    try {\n      // Execute the transaction to delete a task\n      await contract.methods.deleteTask(index).send({\n        from: accounts[0]\n      });\n      const clonedTasks = [...tasks];\n      clonedTasks.splice(index, 1);\n      setTasks(clonedTasks);\n      saveTasks(clonedTasks);\n    } catch (error) {\n      console.error('Error executing transaction:', error);\n    }\n  }\n\n  function loadTasks() {\n    let loadedTasks = localStorage.getItem('tasks');\n    let tasks = JSON.parse(loadedTasks);\n\n    if (tasks) {\n      setTasks(tasks);\n    }\n  }\n\n  function saveTasks(tasks) {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  useEffect(() => {\n    loadTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ColorSchemeProvider, {\n    colorScheme: colorScheme,\n    toggleColorScheme: toggleColorScheme,\n    children: /*#__PURE__*/_jsxDEV(MantineProvider, {\n      theme: {\n        colorScheme,\n        defaultRadius: 'md'\n      },\n      withGlobalStyles: true,\n      withNormalizeCSS: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          opened: opened,\n          size: 'md',\n          title: 'New Task',\n          withCloseButton: false,\n          onClose: () => {\n            setOpened(false);\n          },\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            mt: 'md',\n            ref: taskTitle,\n            placeholder: 'Task Title',\n            required: true,\n            label: 'Title'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            ref: taskSummary,\n            mt: 'md',\n            placeholder: 'Task Summary',\n            label: 'Summary'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Group, {\n            mt: 'md',\n            position: 'apart',\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setOpened(false);\n              },\n              variant: 'subtle',\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                createTask();\n                setOpened(false);\n              },\n              children: \"Create Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          size: 550,\n          my: 40,\n          children: [/*#__PURE__*/_jsxDEV(Group, {\n            position: 'apart',\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              sx: theme => ({\n                fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                fontWeight: 900\n              }),\n              children: \"My Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 6\n          }, this), tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Card, {\n            withBorder: true,\n            mt: 'sm',\n            children: [/*#__PURE__*/_jsxDEV(Group, {\n              position: 'apart',\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                weight: 'bold',\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(ActionIcon, {\n                onClick: () => {\n                  deleteTask(index);\n                },\n                color: 'red',\n                variant: 'transparent',\n                children: /*#__PURE__*/_jsxDEV(Trash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: 'dimmed',\n              size: 'md',\n              mt: 'sm',\n              children: task.summary ? task.summary : 'No summary was provided for this task'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 6\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 7\n          }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n            size: 'lg',\n            mt: 'md',\n            color: 'dimmed',\n            children: \"You have no tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setOpened(true);\n            },\n            fullWidth: true,\n            mt: 'md',\n            children: \"New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"FewMzttqL+Z4gxIvIgjSYXWo2eE=\", false, function () {\n  return [useColorScheme, useLocalStorage, useHotkeys];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","Container","Text","Title","Modal","TextInput","Group","Card","ActionIcon","useState","useRef","useEffect","MoonStars","Sun","Trash","MantineProvider","ColorSchemeProvider","useColorScheme","useHotkeys","useLocalStorage","Web3","App","tasks","setTasks","opened","setOpened","preferredColorScheme","colorScheme","setColorScheme","key","defaultValue","getInitialValueInEffect","toggleColorScheme","value","taskTitle","taskSummary","connectToMetamask","window","ethereum","request","method","web3","error","console","createTask","contractAddress","contractABI","contract","eth","Contract","accounts","getAccounts","newTask","title","current","summary","methods","send","from","saveTasks","deleteTask","index","clonedTasks","splice","loadTasks","loadedTasks","localStorage","getItem","JSON","parse","setItem","stringify","defaultRadius","theme","fontFamily","fontWeight","length","map","task"],"sources":["C:/Users/Asus/Desktop/todolist-blockchain/src/App.js"],"sourcesContent":["import {\r\n\tButton,\r\n\tContainer,\r\n\tText,\r\n\tTitle,\r\n\tModal,\r\n\tTextInput,\r\n\tGroup,\r\n\tCard,\r\n\tActionIcon,\r\n  } from '@mantine/core';\r\n  import { useState, useRef, useEffect } from 'react';\r\n  import { MoonStars, Sun, Trash } from 'tabler-icons-react';\r\n  \r\n  import {\r\n\tMantineProvider,\r\n\tColorSchemeProvider,\r\n  } from '@mantine/core';\r\n  import { useColorScheme } from '@mantine/hooks';\r\n  import { useHotkeys, useLocalStorage } from '@mantine/hooks';\r\n  \r\n  import Web3 from 'web3';\r\n  \r\n  export default function App() {\r\n\tconst [tasks, setTasks] = useState([]);\r\n\tconst [opened, setOpened] = useState(false);\r\n  \r\n\tconst preferredColorScheme = useColorScheme();\r\n\tconst [colorScheme, setColorScheme] = useLocalStorage({\r\n\t  key: 'mantine-color-scheme',\r\n\t  defaultValue: 'light',\r\n\t  getInitialValueInEffect: true,\r\n\t});\r\n\tconst toggleColorScheme = value =>\r\n\t  setColorScheme(value || (colorScheme === 'dark' ? 'light' : 'dark'));\r\n  \r\n\tuseHotkeys([['mod+J', () => toggleColorScheme()]]);\r\n  \r\n\tconst taskTitle = useRef('');\r\n\tconst taskSummary = useRef('');\r\n  \r\n\tuseEffect(() => {\r\n\t  async function connectToMetamask() {\r\n\t\tif (window.ethereum) {\r\n\t\t  try {\r\n\t\t\tawait window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\t\t\twindow.web3 = new Web3(window.ethereum);\r\n\t\t  } catch (error) {\r\n\t\t\tconsole.error('Error connecting to Metamask:', error);\r\n\t\t  }\r\n\t\t} else {\r\n\t\t  console.error('Metamask not detected');\r\n\t\t}\r\n\t  }\r\n  \r\n\t  connectToMetamask();\r\n\t}, []);\r\n  \r\n\tasync function createTask() {\r\n\t  const contractAddress = '0xcD6a42782d230D7c13A74ddec5dD140e55499Df9'; // Replace with your smart contract address\r\n\t  const contractABI = [\r\n\t\t{\r\n\t\t\t\"anonymous\": false,\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"title\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"summary\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"TaskCreated\",\r\n\t\t\t\"type\": \"event\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"anonymous\": false,\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"TaskDeleted\",\r\n\t\t\t\"type\": \"event\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"_title\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"_summary\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"createTask\",\r\n\t\t\t\"outputs\": [],\r\n\t\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"deleteTask\",\r\n\t\t\t\"outputs\": [],\r\n\t\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [],\r\n\t\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\t\"type\": \"constructor\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [],\r\n\t\t\t\"name\": \"getTaskCount\",\r\n\t\t\t\"outputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"stateMutability\": \"view\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"getTaskDetails\",\r\n\t\t\t\"outputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"title\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"summary\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\t\"name\": \"completed\",\r\n\t\t\t\t\t\"type\": \"bool\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"stateMutability\": \"view\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [],\r\n\t\t\t\"name\": \"owner\",\r\n\t\t\t\"outputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"stateMutability\": \"view\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"tasks\",\r\n\t\t\t\"outputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"title\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"summary\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\t\"name\": \"completed\",\r\n\t\t\t\t\t\"type\": \"bool\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"stateMutability\": \"view\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t}\r\n\t]; // Replace with your smart contract ABI\r\n  \r\n\t  const contract = new window.web3.eth.Contract(contractABI, contractAddress);\r\n  \r\n\t  const accounts = await window.web3.eth.getAccounts();\r\n  \r\n\t  const newTask = {\r\n\t\ttitle: taskTitle.current.value,\r\n\t\tsummary: taskSummary.current.value,\r\n\t  };\r\n  \r\n\t  try {\r\n\t\tawait contract.methods.createTask(newTask.title, newTask.summary).send({\r\n\t\t  from: accounts[0],\r\n\t\t});\r\n  \r\n\t\tsetTasks([...tasks, newTask]);\r\n\t\tsaveTasks([...tasks, newTask]);\r\n\t  } catch (error) {\r\n\t\tconsole.error('Error executing transaction:', error);\r\n\t  }\r\n\t}\r\n  \r\n\tasync function deleteTask(index) {\r\n\t  const contractAddress = '0xcD6a42782d230D7c13A74ddec5dD140e55499Df9'; // Replace with your smart contract address\r\n\t  const contractABI = [\r\n\t\t{\r\n\t\t\t\"anonymous\": false,\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"title\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"summary\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"TaskCreated\",\r\n\t\t\t\"type\": \"event\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"anonymous\": false,\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"TaskDeleted\",\r\n\t\t\t\"type\": \"event\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"_title\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"_summary\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"createTask\",\r\n\t\t\t\"outputs\": [],\r\n\t\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"deleteTask\",\r\n\t\t\t\"outputs\": [],\r\n\t\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [],\r\n\t\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\t\"type\": \"constructor\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [],\r\n\t\t\t\"name\": \"getTaskCount\",\r\n\t\t\t\"outputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"stateMutability\": \"view\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"getTaskDetails\",\r\n\t\t\t\"outputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"title\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"summary\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\t\"name\": \"completed\",\r\n\t\t\t\t\t\"type\": \"bool\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"stateMutability\": \"view\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [],\r\n\t\t\t\"name\": \"owner\",\r\n\t\t\t\"outputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"stateMutability\": \"view\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"inputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"name\": \"tasks\",\r\n\t\t\t\"outputs\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"title\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\"name\": \"summary\",\r\n\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\t\"name\": \"completed\",\r\n\t\t\t\t\t\"type\": \"bool\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"stateMutability\": \"view\",\r\n\t\t\t\"type\": \"function\"\r\n\t\t}\r\n\t]; // Replace with your smart contract ABI\r\n  \r\n\t  const contract = new window.web3.eth.Contract(contractABI, contractAddress);\r\n  \r\n\t  const accounts = await window.web3.eth.getAccounts();\r\n  \r\n\t  try {\r\n\t\t// Execute the transaction to delete a task\r\n\t\tawait contract.methods.deleteTask(index).send({\r\n\t\t  from: accounts[0],\r\n\t\t});\r\n  \r\n\t\tconst clonedTasks = [...tasks];\r\n\t\tclonedTasks.splice(index, 1);\r\n  \r\n\t\tsetTasks(clonedTasks);\r\n\t\tsaveTasks(clonedTasks);\r\n\t  } catch (error) {\r\n\t\tconsole.error('Error executing transaction:', error);\r\n\t  }\r\n\t}\r\n  \r\n\tfunction loadTasks() {\r\n\t  let loadedTasks = localStorage.getItem('tasks');\r\n  \r\n\t  let tasks = JSON.parse(loadedTasks);\r\n  \r\n\t  if (tasks) {\r\n\t\tsetTasks(tasks);\r\n\t  }\r\n\t}\r\n  \r\n\tfunction saveTasks(tasks) {\r\n\t  localStorage.setItem('tasks', JSON.stringify(tasks));\r\n\t}\r\n  \r\n\tuseEffect(() => {\r\n\t  loadTasks();\r\n\t}, []);\r\n  \r\n\treturn (\r\n\t  <ColorSchemeProvider\r\n\t\tcolorScheme={colorScheme}\r\n\t\ttoggleColorScheme={toggleColorScheme}>\r\n\t\t<MantineProvider\r\n\t\t  theme={{ colorScheme, defaultRadius: 'md' }}\r\n\t\t  withGlobalStyles\r\n\t\t  withNormalizeCSS>\r\n\t\t  <div className='App'>\r\n\t\t\t<Modal\r\n\t\t\t  opened={opened}\r\n\t\t\t  size={'md'}\r\n\t\t\t  title={'New Task'}\r\n\t\t\t  withCloseButton={false}\r\n\t\t\t  onClose={() => {\r\n\t\t\t\tsetOpened(false);\r\n\t\t\t  }}\r\n\t\t\t  centered>\r\n\t\t\t  <TextInput\r\n\t\t\t\tmt={'md'}\r\n\t\t\t\tref={taskTitle}\r\n\t\t\t\tplaceholder={'Task Title'}\r\n\t\t\t\trequired\r\n\t\t\t\tlabel={'Title'}\r\n\t\t\t  />\r\n\t\t\t  <TextInput\r\n\t\t\t\tref={taskSummary}\r\n\t\t\t\tmt={'md'}\r\n\t\t\t\tplaceholder={'Task Summary'}\r\n\t\t\t\tlabel={'Summary'}\r\n\t\t\t  />\r\n\t\t\t  <Group mt={'md'} position={'apart'}>\r\n\t\t\t\t<Button\r\n\t\t\t\t  onClick={() => {\r\n\t\t\t\t\tsetOpened(false);\r\n\t\t\t\t  }}\r\n\t\t\t\t  variant={'subtle'}>\r\n\t\t\t\t  Cancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t  onClick={() => {\r\n\t\t\t\t\tcreateTask();\r\n\t\t\t\t\tsetOpened(false);\r\n\t\t\t\t  }}>\r\n\t\t\t\t  Create Task\r\n\t\t\t\t</Button>\r\n\t\t\t  </Group>\r\n\t\t\t</Modal>\r\n\t\t\t<Container size={550} my={40}>\r\n\t\t\t  <Group position={'apart'}>\r\n\t\t\t\t<Title\r\n\t\t\t\t  sx={theme => ({\r\n\t\t\t\t\tfontFamily: `Greycliff CF, ${theme.fontFamily}`,\r\n\t\t\t\t\tfontWeight: 900,\r\n\t\t\t\t  })}>\r\n\t\t\t\t  My Tasks\r\n\t\t\t\t</Title>\r\n\t\t\t\t{/* ... (rest of the code remains unchanged) */}\r\n\t\t\t  </Group>\r\n\t\t\t  {tasks.length > 0 ? (\r\n\t\t\t\ttasks.map((task, index) => (\r\n\t\t\t\t  <Card key={index} withBorder mt={'sm'}>\r\n\t\t\t\t\t<Group position={'apart'}>\r\n\t\t\t\t\t  <Text weight={'bold'}>{task.title}</Text>\r\n\t\t\t\t\t  <ActionIcon\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t  deleteTask(index);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor={'red'}\r\n\t\t\t\t\t\tvariant={'transparent'}>\r\n\t\t\t\t\t\t<Trash />\r\n\t\t\t\t\t  </ActionIcon>\r\n\t\t\t\t\t</Group>\r\n\t\t\t\t\t<Text color={'dimmed'} size={'md'} mt={'sm'}>\r\n\t\t\t\t\t  {task.summary\r\n\t\t\t\t\t\t? task.summary\r\n\t\t\t\t\t\t: 'No summary was provided for this task'}\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t  </Card>\r\n\t\t\t\t))\r\n\t\t\t  ) : (\r\n\t\t\t\t<Text size={'lg'} mt={'md'} color={'dimmed'}>\r\n\t\t\t\t  You have no tasks\r\n\t\t\t\t</Text>\r\n\t\t\t  )}\r\n\t\t\t  <Button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t  setOpened(true);\r\n\t\t\t\t}}\r\n\t\t\t\tfullWidth\r\n\t\t\t\tmt={'md'}>\r\n\t\t\t\tNew Task\r\n\t\t\t  </Button>\r\n\t\t\t</Container>\r\n\t\t  </div>\r\n\t\t</MantineProvider>\r\n\t  </ColorSchemeProvider>\r\n\t);\r\n  }\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}